---
- name: Read in Node path if available
  command: cat /home/{{django_user}}/nvm/path_to_current
  register: node_path
  ignore_errors: yes
  tags: code_update

- name: Combine setup environment with NODE path
  set_fact:
    django_setup_environment:
      "{{ {'PATH': node_path.stdout+':'+ansible_env.PATH } | combine(django_setup_environment) }}"
  when: node_path.stdout is defined
  tags: code_update

- name: Template in Django configuration
  become_user: "{{django_user}}"
  template: src=django_local_settings.py.j2
            dest=/home/{{django_user}}/{{django_name}}/local_settings.py
            mode=0644
  when: django_create_local_settings

- name: Template in Django configuration for container
  become_user: "{{django_user}}"
  template: src=django_local_settings_docker.py.j2
            dest=/home/{{django_user}}/{{django_name}}/local_settings.py
            mode=0644
  when: django_create_contained_local_settings

- name: Create django configuration fragment directory
  file:
    path: /home/{{django_user}}/{{django_name}}/local_settings.d
    state: directory
    mode: 0755
    owner: "{{ django_user }}"
  when: django_create_local_settings

- name: Copy in configuration fragments
  become_user: "{{django_user}}"
  template: src={{ item }}
            dest=/home/{{django_user}}/{{django_name}}/local_settings.d
  tags: [ django_config, code_update ]
  with_items: "{{ django_config_fragments }}"

# "type" is just a subdirectory of files
- name: Copy in deployment specific files
  copy:
    src: files/{{ item.type|default("django-generic") }}/{{ item.source }}
    dest: /home/{{django_user}}/{{ item.target }}
    mode: "{{ item.mode|default(0644) }}"
  with_items: "{{ django_deployment_files }}"

- name: Run pre-migration management commands
  become_user: "{{django_user}}"
  environment: "{{ django_setup_environment }}"
  django_manage: command={{ item }} app_path=/home/{{django_user}}/{{django_name}}
                  virtualenv=/home/{{django_user}}/venv
  with_items: "{{django_premigration_commands}}"
  tags: code_update

- name: Apply database migrations
  environment: "{{ django_setup_environment }}"
  django_manage: command=migrate app_path=/home/{{django_user}}/{{django_name}}
                 virtualenv=/home/{{django_user}}/venv
  become_user: "{{django_user}}"
  when: django_run_migrations
  tags: [db,code_update]

- name: Check if translations are present
  find: path=/home/{{django_user}}/{{django_name}}
        patterns=locale
        recurse=yes
        file_type=directory
  register: locale
  tags: code_update

- name: Compile translations, if present
  django_manage: command=compilemessages app_path=/home/{{django_user}}/{{django_name}}
                 virtualenv=/home/{{django_user}}/venv
  become_user: "{{django_user}}"
  environment: "{{ django_setup_environment }}"
  # django_locales_present is an override when the test above produces false results
  when: locale.matched > 0 or django_locales_present
  tags: code_update

- name: Create static file directory
  become_user: "{{django_user}}"
  file: path=/home/{{django_user}}/static state=directory
  ignore_errors: yes

- name: Create media directory
  become_user: "{{django_user}}"
  file: path=/home/{{django_user}}/media state=directory
  ignore_errors: yes

- name: Run post-migration shell commands
  become_user: "{{django_user}}"
  environment: "{{ django_setup_environment }}"
  # chdir and command in this order to avoid quoting the whole thing
  command: chdir=/home/{{django_user}}/{{django_name}} {{ item }}
  with_items: "{{ django_shell_commands }}"
  tags: code_update

- name: Run post-migration management commands
  become_user: "{{django_user}}"
  environment: "{{ django_setup_environment }}"
  django_manage: command={{ item }} app_path=/home/{{django_user}}/{{django_name}}
                  virtualenv=/home/{{django_user}}/venv
  with_items: "{{django_setup_commands}}"

- name: Collect static files
  become_user: "{{django_user}}"
  environment: "{{ django_setup_environment }}"
  django_manage: command=collectstatic app_path=/home/{{django_user}}/{{django_name}}
                 virtualenv=/home/{{django_user}}/venv
  tags: code_update
